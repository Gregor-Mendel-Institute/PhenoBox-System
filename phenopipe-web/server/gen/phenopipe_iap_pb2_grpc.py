# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import phenopipe_iap_pb2 as phenopipe__iap__pb2
import phenopipe_pb2 as phenopipe__pb2


class PhenopipeIapStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ImportExperiment = channel.unary_unary(
        '/phenopipe.PhenopipeIap/ImportExperiment',
        request_serializer=phenopipe__iap__pb2.ImportRequest.SerializeToString,
        response_deserializer=phenopipe__pb2.JobResponse.FromString,
        )
    self.FetchImportResult = channel.unary_unary(
        '/phenopipe.PhenopipeIap/FetchImportResult',
        request_serializer=phenopipe__pb2.FetchJobResultRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.ImportResponse.FromString,
        )
    self.AnalyzeExperiment = channel.unary_unary(
        '/phenopipe.PhenopipeIap/AnalyzeExperiment',
        request_serializer=phenopipe__iap__pb2.AnalyzeRequest.SerializeToString,
        response_deserializer=phenopipe__pb2.JobResponse.FromString,
        )
    self.FetchAnalyzeResult = channel.unary_unary(
        '/phenopipe.PhenopipeIap/FetchAnalyzeResult',
        request_serializer=phenopipe__pb2.FetchJobResultRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.AnalyzeResponse.FromString,
        )
    self.ExportExperiment = channel.unary_unary(
        '/phenopipe.PhenopipeIap/ExportExperiment',
        request_serializer=phenopipe__iap__pb2.ExportRequest.SerializeToString,
        response_deserializer=phenopipe__pb2.JobResponse.FromString,
        )
    self.DeleteExperiment = channel.unary_unary(
        '/phenopipe.PhenopipeIap/DeleteExperiment',
        request_serializer=phenopipe__iap__pb2.DeleteRequest.SerializeToString,
        response_deserializer=phenopipe__pb2.JobResponse.FromString,
        )
    self.FetchExportResult = channel.unary_unary(
        '/phenopipe.PhenopipeIap/FetchExportResult',
        request_serializer=phenopipe__pb2.FetchJobResultRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.ExportResponse.FromString,
        )
    self.ImportAndAnalyze = channel.unary_stream(
        '/phenopipe.PhenopipeIap/ImportAndAnalyze',
        request_serializer=phenopipe__iap__pb2.ImportAndAnalyzeRequest.SerializeToString,
        response_deserializer=phenopipe__pb2.ProgressResponse.FromString,
        )
    self.UploadPipeline = channel.unary_unary(
        '/phenopipe.PhenopipeIap/UploadPipeline',
        request_serializer=phenopipe__iap__pb2.UploadPipelineRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.UploadPipelineResponse.FromString,
        )
    self.DeletePipeline = channel.unary_unary(
        '/phenopipe.PhenopipeIap/DeletePipeline',
        request_serializer=phenopipe__iap__pb2.DeletePipelineRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.DeletePipelineResponse.FromString,
        )
    self.GetPipeline = channel.unary_unary(
        '/phenopipe.PhenopipeIap/GetPipeline',
        request_serializer=phenopipe__iap__pb2.GetPipelineRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.GetPipelineResponse.FromString,
        )
    self.GetPipelines = channel.unary_unary(
        '/phenopipe.PhenopipeIap/GetPipelines',
        request_serializer=phenopipe__iap__pb2.GetPipelinesRequest.SerializeToString,
        response_deserializer=phenopipe__iap__pb2.GetPipelinesResponse.FromString,
        )


class PhenopipeIapServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ImportExperiment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchImportResult(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AnalyzeExperiment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchAnalyzeResult(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ExportExperiment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteExperiment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchExportResult(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ImportAndAnalyze(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadPipeline(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeletePipeline(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPipeline(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPipelines(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PhenopipeIapServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ImportExperiment': grpc.unary_unary_rpc_method_handler(
          servicer.ImportExperiment,
          request_deserializer=phenopipe__iap__pb2.ImportRequest.FromString,
          response_serializer=phenopipe__pb2.JobResponse.SerializeToString,
      ),
      'FetchImportResult': grpc.unary_unary_rpc_method_handler(
          servicer.FetchImportResult,
          request_deserializer=phenopipe__pb2.FetchJobResultRequest.FromString,
          response_serializer=phenopipe__iap__pb2.ImportResponse.SerializeToString,
      ),
      'AnalyzeExperiment': grpc.unary_unary_rpc_method_handler(
          servicer.AnalyzeExperiment,
          request_deserializer=phenopipe__iap__pb2.AnalyzeRequest.FromString,
          response_serializer=phenopipe__pb2.JobResponse.SerializeToString,
      ),
      'FetchAnalyzeResult': grpc.unary_unary_rpc_method_handler(
          servicer.FetchAnalyzeResult,
          request_deserializer=phenopipe__pb2.FetchJobResultRequest.FromString,
          response_serializer=phenopipe__iap__pb2.AnalyzeResponse.SerializeToString,
      ),
      'ExportExperiment': grpc.unary_unary_rpc_method_handler(
          servicer.ExportExperiment,
          request_deserializer=phenopipe__iap__pb2.ExportRequest.FromString,
          response_serializer=phenopipe__pb2.JobResponse.SerializeToString,
      ),
      'DeleteExperiment': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteExperiment,
          request_deserializer=phenopipe__iap__pb2.DeleteRequest.FromString,
          response_serializer=phenopipe__pb2.JobResponse.SerializeToString,
      ),
      'FetchExportResult': grpc.unary_unary_rpc_method_handler(
          servicer.FetchExportResult,
          request_deserializer=phenopipe__pb2.FetchJobResultRequest.FromString,
          response_serializer=phenopipe__iap__pb2.ExportResponse.SerializeToString,
      ),
      'ImportAndAnalyze': grpc.unary_stream_rpc_method_handler(
          servicer.ImportAndAnalyze,
          request_deserializer=phenopipe__iap__pb2.ImportAndAnalyzeRequest.FromString,
          response_serializer=phenopipe__pb2.ProgressResponse.SerializeToString,
      ),
      'UploadPipeline': grpc.unary_unary_rpc_method_handler(
          servicer.UploadPipeline,
          request_deserializer=phenopipe__iap__pb2.UploadPipelineRequest.FromString,
          response_serializer=phenopipe__iap__pb2.UploadPipelineResponse.SerializeToString,
      ),
      'DeletePipeline': grpc.unary_unary_rpc_method_handler(
          servicer.DeletePipeline,
          request_deserializer=phenopipe__iap__pb2.DeletePipelineRequest.FromString,
          response_serializer=phenopipe__iap__pb2.DeletePipelineResponse.SerializeToString,
      ),
      'GetPipeline': grpc.unary_unary_rpc_method_handler(
          servicer.GetPipeline,
          request_deserializer=phenopipe__iap__pb2.GetPipelineRequest.FromString,
          response_serializer=phenopipe__iap__pb2.GetPipelineResponse.SerializeToString,
      ),
      'GetPipelines': grpc.unary_unary_rpc_method_handler(
          servicer.GetPipelines,
          request_deserializer=phenopipe__iap__pb2.GetPipelinesRequest.FromString,
          response_serializer=phenopipe__iap__pb2.GetPipelinesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'phenopipe.PhenopipeIap', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
